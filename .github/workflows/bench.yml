name: Benchmark

on:
  push:
    paths: ["**.rs", "**.c*", "**.py", "**.toml", "**.lock", "meson.build", "**/bench.yml"]
  pull_request:
    paths: ["**.rs", "**.c*", "**.py", "**.toml", "**.lock", "meson.build", "**/bench.yml"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: "always"
  DEBIAN_FRONTEND: noninteractive

jobs:
  x86_64-linux:
    name: Benchmark on x86_64 Linux (Ubuntu)
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: download deps
        run: |
          sudo apt-get -y -q install gcc
          pip install meson ninja
      - name: run bench
        run: |
          meson setup build
          meson compile -C build
          meson test --benchmark -C build
          time python3 py/speedometer.py
  aarch64-linux:
    name: Benchmark on Aarch64 Linux (Ubuntu)
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: download deps
        run: |
          sudo apt-get -y -q install gcc
          pip install meson ninja
      - name: run bench
        run: |
          meson setup build
          meson compile -C build
          meson test --benchmark -C build
          time python3 py/speedometer.py

  x86_64-macos:
    name: Benchmark on x86_64 MacOS
    runs-on: macos-13
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: download deps
        run: |
          pip install -q numba
          brew update && brew install meson
      - name: run bench
        run: |
          meson setup build
          meson compile -C build
          meson test --benchmark -C build
          time python3 py/speedometer.py && time python3 py-numba/numbed.py
  aarch64-macos:
    name: Benchmark on aarch64 MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: download deps
        run: |
          pip install -q numba
          brew update && brew install meson
      - name: run bench
        run: |
          meson setup build
          meson compile -C build
          meson test --benchmark -C build
          time python3 py/speedometer.py && time python3 py-numba/numbed.py
  x86_64-windows-gnu:
    name: Benchmark on x86_64 Windows (MinGW)
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          pacboy: >-
            cc
            rust
            python
            meson
            python-numba
      - name: run bench
        shell: msys2 {0}
        env:
          RUSTC_BOOTSTRAP: 1
        run: |
          meson setup build
          meson compile -C build
          meson test --benchmark -C build
          time python py/speedometer.py && time python py-numba/numbed.py
  x86_64-windows-gnullvm:
    name: Benchmark on x86_64 Windows (MinGW/LLVM)
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG64
          update: true
          pacboy: >-
            cc
            rust
            python
            meson
            python-numba
      - name: run bench
        shell: msys2 {0}
        env:
          RUSTC_BOOTSTRAP: 1
        run: |
          meson setup build
          meson compile -C build
          meson test --benchmark -C build
          time python py/speedometer.py && time python py-numba/numbed.py
  x86_64-windows-msvc:
    name: Benchmark on x86_64 Windows (MSVC)
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: download deps
        run: |
          pip install -q numba meson ninja
      - name: run bench
        run: |
          meson setup --vsenv build
          meson compile -C build
          meson test --benchmark -C build
          Measure-Command { python py/speedometer.py } && Measure-Command { python py-numba/numbed.py }
  # x86_64-openbsd:
  #   name: Benchmark on x86_64 OpenBSD (VM on Ubuntu)
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: run bench
  #       uses: vmactions/openbsd-vm@v1
  #       with:
  #         usesh: true
  #         copyback: false
  #         prepare: |
  #           pkg_add gcc-11.2.0p14 meson g++-11.2.0p15 python curl
  #           curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain nightly
  #         run: |
  #           meson setup build
  #           meson compile -C build
  #           meson test --benchmark -C build
  #           time python py/speedometer.py
  x86_64-cross-openbsd:
    name: Compile rust-no-core for OpenBSD (cross compilation on Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Compile bl_rs-no-core for `x86_64-unknown-openbsd` target
        run: |
          rustup default nightly
          rustup component add rust-src
          cargo build --target=x86_64-unknown-openbsd -p bl_rs-no-core -Zbuild-std
      # - name: run bench
      #   uses: vmactions/openbsd-vm@v1
      #   with:
      #     usesh: true
      #     copyback: false
      #     run: time ./target/x86_64-unknown-openbsd/debug/bl_rs-no-core
  x86_64-freebsd:
    name: Benchmark on x86_64 FreeBSD (VM on Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: run bench
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          copyback: false
          prepare: |
            pkg install -y meson python curl
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain nightly
          run: |
            . "$HOME/.cargo/env"
            meson setup build
            meson compile -C build
            meson test --benchmark -C build
            time python py/speedometer.py
  x86_64-cross-musl:
    name: Benchmark on x86_64 Linux with Musl (cross compilation on Ubuntu)
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: install deps
        run: |
          sudo apt-get install -y -q musl-tools
          rustup target add x86_64-unknown-linux-musl
      - name: run bench
        run: |
          cargo build --target=x86_64-unknown-linux-musl -p bl_rs-no-core
          time target/x86_64-unknown-linux-musl/debug/bl_rs-no-core
